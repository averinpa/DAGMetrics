% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_single_dag.R
\name{vis_dag}
\alias{vis_dag}
\title{Visualize Bayesian Networks}
\usage{
vis_dag(bn, nodes = "all", name = "DAG")
}
\arguments{
\item{bn}{A Bayesian network (bn object) to visualize. This should be created using the \code{bnlearn} package.}

\item{nodes}{A character vector specifying the names of the nodes to visualize along with their Markov blankets.
If \code{"all"}, the entire network structure is visualized. Default is \code{"all"}.}

\item{name}{A title for the graph. Default is "DAG".}
}
\value{
A plot of the Bayesian network or its subgraph, highlighting the specified nodes and their Markov blankets.
}
\description{
This function visualizes a Bayesian network or its subgraphs, highlighting specified nodes and their Markov blankets.
If "all" is provided for the nodes parameter, the entire network structure is visualized.
}
\details{
The function uses \code{bnlearn::graphviz.plot()} to generate the plot. If specific nodes are provided, their
Markov blankets are highlighted in the subgraph. If no arcs exist in the subgraph, only nodes are customized.
Otherwise, both nodes and edges are styled for better visualization.

Node and edge customizations include:
\itemize{
\item Highlighted nodes are filled with a distinct color (\code{"#A9DFBF"}).
\item Other nodes are filled with a default color (\code{"#D6EAF8"}).
\item Edges are styled uniformly with a default color and line width.
}
}
\examples{
library(bnlearn)

# Create a random Bayesian network
bn <- random.graph(nodes = c("A", "B", "C", "D"))

# Visualize the full network
vis_dag(bn, nodes = "all", name = "Full DAG")

# Visualize specific nodes and their Markov blankets
vis_dag(bn, nodes = c("A", "B"), name = "Subgraph with A and B")

}
\seealso{
\code{\link[bnlearn]{graphviz.plot}}, \code{\link[bnlearn]{mb}}, \code{\link[bnlearn]{subgraph}}
}
